{"ast":null,"code":"/*!\r\n * node-sass: lib/binding.js\r\n */\n\nvar errors = require('./errors');\n\n/**\r\n * Require binding\r\n */\nmodule.exports = function (ext) {\n  if (!ext.hasBinary(ext.getBinaryPath())) {\n    if (!ext.isSupportedEnvironment()) {\n      throw new Error(errors.unsupportedEnvironment());\n    } else {\n      throw new Error(errors.missingBinary());\n    }\n  }\n  return require(ext.getBinaryPath());\n};","map":{"version":3,"names":["errors","require","module","exports","ext","hasBinary","getBinaryPath","isSupportedEnvironment","Error","unsupportedEnvironment","missingBinary"],"sources":["C:/Users/notre/Documents/Projetos/PORTFOLIO/primeiro-portfolio/node_modules/node-sass/lib/binding.js"],"sourcesContent":["/*!\r\n * node-sass: lib/binding.js\r\n */\r\n\r\nvar errors = require('./errors');\r\n\r\n/**\r\n * Require binding\r\n */\r\nmodule.exports = function(ext) {\r\n  if (!ext.hasBinary(ext.getBinaryPath())) {\r\n    if (!ext.isSupportedEnvironment()) {\r\n      throw new Error(errors.unsupportedEnvironment());\r\n    } else {\r\n      throw new Error(errors.missingBinary());\r\n    }\r\n  }\r\n\r\n  return require(ext.getBinaryPath());\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;;AAEhC;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAASC,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,CAACC,SAAS,CAACD,GAAG,CAACE,aAAa,EAAE,CAAC,EAAE;IACvC,IAAI,CAACF,GAAG,CAACG,sBAAsB,EAAE,EAAE;MACjC,MAAM,IAAIC,KAAK,CAACR,MAAM,CAACS,sBAAsB,EAAE,CAAC;IAClD,CAAC,MAAM;MACL,MAAM,IAAID,KAAK,CAACR,MAAM,CAACU,aAAa,EAAE,CAAC;IACzC;EACF;EAEA,OAAOT,OAAO,CAACG,GAAG,CAACE,aAAa,EAAE,CAAC;AACrC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}